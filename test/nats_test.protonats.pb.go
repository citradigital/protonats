// Code generated by github.com/citradigital/protonats. DO NOT EDIT.
// source: nats_test.proto
package test
import (
	"context"
	"errors"
	"github.com/gogo/protobuf/proto"
	"github.com/citradigital/protonats"
)


type TestServiceClient struct {
	Bus *protonats.Bus
}

func NewTestServiceClient(bus *protonats.Bus) * TestServiceClient {
	s := &TestServiceClient{ Bus: bus }
	return s
}

	
func (service *TestServiceClient) GetTestA(ctx context.Context, req *TestARequest) (*TestAResponse, error) {
	functionName := "TestService/GetTestA"
	
	reqRaw, err := proto.Marshal(req)

	result, err := service.Bus.Connection.RequestWithContext(ctx, functionName, reqRaw)
	if err != nil {
		return nil, err
	}

	if result.Data[0] == 0 {
		// 0 means no error
		p := &TestAResponse{}
		err = proto.Unmarshal(result.Data[1:], p)
		if err != nil {
			return nil, err
		}
		return p, nil
	} else {
		var pErr protonats.ErrorMessage
		err = proto.Unmarshal(result.Data[1:], &pErr)
		if err == nil {
			return nil, errors.New(pErr.ErrorMessage)
		} else {
			return nil, err
		}
	}
}

